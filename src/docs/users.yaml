openapi: 3.0.0
info:
  title: API de Usuarios
  version: 1.0.0
  description: Documentación de los endpoints de usuarios

paths:
  /api/users:
    get:
      summary: Obtener todos los usuarios
      description: Devuelve una lista con todos los usuarios registrados en el sistema.
      tags:
        - Users
      responses:
        "200":
          description: Lista de usuarios obtenida con éxito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  payload:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "500":
          description: Error del servidor.
    
    post:
      summary: Crear un nuevo usuario
      description: Crea un nuevo usuario en la base de datos.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "201":
          description: Usuario creado exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  payload:
                    $ref: "#/components/schemas/User"
        "400":
          description: Datos inválidos en la solicitud.
        "500":
          description: Error del servidor.

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: "60d0fe4f5311236168a109ca"
        first_name:
          type: string
          example: "Juan"
        last_name:
          type: string
          example: "Pérez"
        email:
          type: string
          example: "juan.perez@example.com"
        role:
          type: string
          example: "user"
        pets:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                example: "60d0fe4f5311236168a109cb"
    UserInput:
      type: object
      required:
        - first_name
        - last_name
        - email
        - password
      properties:
        first_name:
          type: string
          example: "Juan"
        last_name:
          type: string
          example: "Pérez"
        email:
          type: string
          example: "juan.perez@example.com"
        password:
          type: string
          example: "securepassword123"
